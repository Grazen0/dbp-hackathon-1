{
	"info": {
		"_postman_id": "a58a6d27-6cc4-43df-b4fd-f7e8719abbb0",
		"name": "Hackathon 1",
		"description": "La API usa un solo endpoint (`POST /auth/login`) para logear a los sparky admins, los admins de empresas (llamadas \"companies\") y usuarios de las empresas, así que este endpoint **se llama varias veces** a medida que se va testeando la API.\n\nLos tests de autenticación y creación de recursos están scripteados para guardar automáticamente el token o ID de recurso recibido como variable en la colección.\n\nUna forma de probar los tests es en el siguiente orden:\n\n1. \"Register Sparky Admin\"\n    \n2. Carpeta Admin\n    \n3. \"Log in as company admin\"\n    \n4. Carpeta Restrictions, carpeta Users\n    \n5. \"Log in as user\" (luego de crear algún usuario en una empresa)\n    \n6. Carpeta AI\n    \n\n**Nota:** El rate limiting por sliding window funciona. Luego de crear un usuario (y antes de logar como ese usuario), se le puede añadir un límite. En el ejemplo dado, el límite establece que si el usuario hace más de 3 requests en un lapso de 10 segundos, se le prohibirán más requests durante 20 segundos.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43480626",
		"_collection_link": "https://planetary-escape-1391844.postman.co/workspace/Jos%C3%A9-Grayson's-Workspace~c4bc84d3-04dd-4b1c-8d8a-76d19da3f965/collection/43480626-a58a6d27-6cc4-43df-b4fd-f7e8719abbb0?action=share&source=collection_link&creator=43480626"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register Sparky admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('jwtToken', data.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log in as Sparky admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('jwtToken', data.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{superUsername}}\",\n    \"password\": \"{{superPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log in as company admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('jwtToken', data.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminUsername}}\",\n    \"password\": \"{{adminPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log in as user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('jwtToken', data.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{userUsername}}\",\n    \"password\": \"{{userPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Create company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('companyId', data.id);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"company\": {\n        \"name\": \"ABC\",\n        \"ruc\": \"123456\"\n    },\n    \"admin\": {\n        \"username\": \"{{adminUsername}}\",\n        \"password\": \"{{adminPassword}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all companies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get company",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update company",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"DEF\",\n    \"ruc\": \"654321\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable company",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies/:id/status?enable=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies",
								":id",
								"status"
							],
							"query": [
								{
									"key": "enable",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable company",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies/:id/status?enable=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies",
								":id",
								"status"
							],
							"query": [
								{
									"key": "enable",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get company consumption",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/companies/:id/consumption",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"companies",
								":id",
								"consumption"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restrictions",
			"item": [
				{
					"name": "Create company restriction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('restrictionId', data.id);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/company/restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"restrictions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all company restrictions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/company/restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"restrictions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update company restriction",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/company/restrictions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"restrictions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restrictionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete company restriction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/company/restrictions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"restrictions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restrictionId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create company user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('userId', data.id);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{userUsername}}\",\n    \"password\": \"{{userPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/company/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all company users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/company/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get company user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/company/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update company user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"nuevo_juan\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/company/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user limit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201) {",
									"    const data = pm.response.json();",
									"    pm.collectionVariables.set('limitId', data.id);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"CALLS\",\n    \"value\": 3,\n    \"timeWindow\": 10,\n    \"duration\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/company/users/:id/limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users",
								":id",
								"limits"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user consumption",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/company/users/:id/consumption",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"company",
								"users",
								":id",
								"consumption"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AI",
			"item": [
				{
					"name": "Chat model request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"hello\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ai/chat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ai",
								"chat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Completion request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"Mary had a little lamb.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ai/completion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ai",
								"completion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multimodal request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"Hola mundo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ai/multimodal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ai",
								"multimodal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available models",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ai/models",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ai",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get call history",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ai/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ai",
								"history"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwtToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwtToken",
			"value": "null",
			"type": "string"
		},
		{
			"key": "companyId",
			"value": ""
		},
		{
			"key": "superUsername",
			"value": "cool_sparky_admin"
		},
		{
			"key": "superPassword",
			"value": "123456"
		},
		{
			"key": "adminUsername",
			"value": "cool_company_admin",
			"type": "string"
		},
		{
			"key": "adminPassword",
			"value": "123456",
			"type": "string"
		},
		{
			"key": "userUsername",
			"value": "cool_user",
			"type": "string"
		},
		{
			"key": "userPassword",
			"value": "123456",
			"type": "string"
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "restrictionId",
			"value": ""
		}
	]
}